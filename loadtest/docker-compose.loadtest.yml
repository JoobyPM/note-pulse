services:
  ###########################################################################
  # MongoDB - in-memory for load tests
  ###########################################################################
  mongo:
    ports: null # wipe the host-port binding
    volumes: null # wipe the named volume
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
  ###########################################################################
  # Lift the sign-in rate-limit during load tests
  ###########################################################################
  server:
    env_file:
      - .env.bench
    environment:
      REQUEST_LOGGING_ENABLED: false
      AUTH_RATE_PER_MIN: 1000000
      LOG_LEVEL: error
    profiles: ["loadtest"]
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M

  ###########################################################################
  # k6 runner (official image)
  ###########################################################################
  k6:
    image: grafana/k6:1.0.0
    profiles: ["loadtest"]
    depends_on:
      server:
        condition: service_healthy
    ports:
      # if you keep this mapping, the host port stays open even when the dashboard
      # is disabled, but that is harmless in most setups.
      - "5665:5665"
    volumes:
      - ./loadtest/scripts:/scripts:ro
      - ./loadtest/reports:/reports
    environment:
      BASE_URL: http://server:8080/api/v1
      K6_SCRIPT: ${K6_SCRIPT:-user_flow.js}
      # new flag; user may override at run time
      K6_ENABLE_DASHBOARD: ${K6_ENABLE_DASHBOARD:-false}
    entrypoint: >
      sh -c '
        # use $$ so Compose does not pre-expand
        SCRIPT="$${K6_SCRIPT:-auth_flow.js}"
        echo "▶ running k6 script: $$SCRIPT"
        mkdir -p /reports
        REPORT="/reports/$${SCRIPT%%.*}.summary.json"

        if [ "$$K6_ENABLE_DASHBOARD" = "true" ]; then
          echo "▶ enabling k6 web dashboard on port 5665"
          K6_WEB_DASHBOARD=true k6 run --quiet --no-color \
            --summary-export "$$REPORT" "/scripts/$$SCRIPT"
        else
          echo "▶ running k6 without dashboard"
          k6 run --quiet --no-color \
            --summary-export "$$REPORT" "/scripts/$$SCRIPT"
        fi'
